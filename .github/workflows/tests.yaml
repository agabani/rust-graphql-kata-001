name: Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  cargo-build:
    name: Cargo Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cargo Cache
        id: cargo-cache
        uses: actions/cache@v2
        with:
          path: |
            ./target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - name: Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
          toolchain: stable
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: rust-actix-web-template-web
          path: |
            ./target/debug/rust-actix-web-template-web

  cargo-clippy:
    name: Cargo Clippy
    runs-on: ubuntu-latest
    needs:
      - cargo-build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cargo Cache
        id: cargo-cache
        uses: actions/cache@v2
        with:
          path: |
            ./target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Toolchain
        uses: actions-rs/toolchain@v1
        with:
          components: clippy
          override: true
          toolchain: stable
      - name: Clippy
        uses: actions-rs/clippy-check@v1
        with:
          args: -- -D warnings
          name: Clippy Results
          token: ${{ secrets.GITHUB_TOKEN }}

  cargo-coverage:
    name: Cargo Coverage
    runs-on: ubuntu-latest
    needs:
      - cargo-build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cargo Cache
        id: cargo-cache
        uses: actions/cache@v2
        with:
          path: |
            ./target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Toolchain
        uses: actions-rs/toolchain@v1
        with:
          override: true
          toolchain: nightly
      - name: Clean
        uses: actions-rs/cargo@v1
        with:
          command: clean
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --no-fail-fast
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
          RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
      - name: Coverage
        id: coverage
        uses: actions-rs/grcov@v0.1
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v1.5.0
        with:
          files: ${{ steps.coverage.outputs.report }}
          token: ${{secrets.CODECOV_TOKEN}}
      - name: Archive code coverage results
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage-report
          path: ${{ steps.coverage.outputs.report }}

  cargo-format:
    name: Cargo Format
    runs-on: ubuntu-latest
    needs:
      - cargo-build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cargo Cache
        id: cargo-cache
        uses: actions/cache@v2
        with:
          path: |
            ./target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
          toolchain: stable
      - name: Format
        uses: actions-rs/cargo@v1
        with:
          args: --all -- --check
          command: fmt

  cargo-test:
    name: Cargo Test
    runs-on: ubuntu-latest
    needs:
      - cargo-build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cargo Cache
        id: cargo-cache
        uses: actions/cache@v2
        with:
          path: |
            ./target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
          toolchain: stable
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
